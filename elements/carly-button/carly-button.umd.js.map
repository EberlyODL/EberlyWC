{"version":3,"file":"carly-button.umd.js","sources":["carly-button.umd.js"],"sourcesContent":["/**\n * Copyright 2019 PSU\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html } from '@polymer/lit-element';\n\nexport { CarlyButton };\n/**\n * `carly-button`\n * `Cool submit button for testing.`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @lit-html\n * @lit-element\n * @demo demo/index.html\n */\nclass CarlyButton extends LitElement {\n  \n  // render function\n  render() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {};\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  tag() {\n    return \"carly-button\";\n  }\n\n  // life cycle\n  constructor() {\n    super();\n    \n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    \n  }\n  // static get observedAttributes() {\n  //   return [];\n  // }\n  // disconnectedCallback() {}\n\n  // attributeChangedCallback(attr, oldValue, newValue) {}\n  \n}\ncustomElements.define(\"carly-button\", CarlyButton);"],"names":["CarlyButton","LitElement","html","customElements","define"],"mappings":"27CAmBMA,2YAAoBC,yDAIfC,gDAsBA,0DARA,qHA+BXC,eAAeC,OAAO,eAAgBJ"}